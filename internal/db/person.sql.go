// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: person.sql

package db

import (
	"context"
	"database/sql"
	"time"

	"github.com/google/uuid"
)

const createPerson = `-- name: CreatePerson :exec
INSERT INTO people ( ID, first_name, last_name, email, phone, cell_phone, personable_id, personable_type, created_at, updated_at)
VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10)
`

type CreatePersonParams struct {
	ID             uuid.UUID      `json:"id"`
	FirstName      string         `json:"first_name"`
	LastName       string         `json:"last_name"`
	Email          string         `json:"email"`
	Phone          sql.NullString `json:"phone"`
	CellPhone      string         `json:"cell_phone"`
	PersonableID   uuid.UUID      `json:"personable_id"`
	PersonableType string         `json:"personable_type"`
	CreatedAt      time.Time      `json:"created_at"`
	UpdatedAt      time.Time      `json:"updated_at"`
}

func (q *Queries) CreatePerson(ctx context.Context, arg CreatePersonParams) error {
	_, err := q.db.ExecContext(ctx, createPerson,
		arg.ID,
		arg.FirstName,
		arg.LastName,
		arg.Email,
		arg.Phone,
		arg.CellPhone,
		arg.PersonableID,
		arg.PersonableType,
		arg.CreatedAt,
		arg.UpdatedAt,
	)
	return err
}

const updatePerson = `-- name: UpdatePerson :exec
UPDATE people SET first_name = $2, last_name = $3, updated_at = $4 WHERE id = $1
`

type UpdatePersonParams struct {
	ID        uuid.UUID `json:"id"`
	FirstName string    `json:"first_name"`
	LastName  string    `json:"last_name"`
	UpdatedAt time.Time `json:"updated_at"`
}

func (q *Queries) UpdatePerson(ctx context.Context, arg UpdatePersonParams) error {
	_, err := q.db.ExecContext(ctx, updatePerson,
		arg.ID,
		arg.FirstName,
		arg.LastName,
		arg.UpdatedAt,
	)
	return err
}
